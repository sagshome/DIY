services:
  mysql:
    image: mysql
    container_name: ioom_mysql
    hostname: database.itsonlyourmoney.com
    env_file:
      - diy/production.env
    networks:
      ioom_network:
        ipv4_address: 172.20.0.10
    volumes:
      - /mnt/shared/database/DIY:/var/lib/mysql
    ports:
      - "43306:3306"
    expose:
      - "3306"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin -h 127.0.0.1 ping -P 3306 -uroot" ]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    env_file:
      - diy/production.env
    ports:
      - "8001:8001"
    build:
      dockerfile: build/app-Dockerfile
    container_name: ioom_app
    hostname: ioom.itsonlyourmoney.com
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      ioom_network:
        ipv4_address: 172.20.0.15
    # expose:
    #  - "8000"  # Expose port for internal communication
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "test",  "-f", "/app/healthcheck" ]
      interval: 10s
      timeout: 5s
      retries: 6

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    build:
      dockerfile: build/nginx-Dockerfile
    container_name: ioom_nginx
    hostname: nginx.itsonlyourmoney.com
    volumes:
      - ./webstore/certbot/www:/var/www/certbot
      - ./webstore/certbot/conf:/etc/letsencrypt
    depends_on:
      - django
    networks:
      ioom_network:
        ipv4_address: 172.20.0.20
    restart: always

  certbot:
    image: certbot/certbot
    container_name: ioom_certbot
    volumes:
      - ./webstore/certbot/www:/var/www/certbot
      - ./webstore/certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet; done'

  redis:
    # Since this is not visible outside the docker network.   No need to expose the port
    image: redis:latest
    container_name: ioom_redis
    hostname: redis.itsonlyourmoney.com
    networks:
      ioom_network:
        ipv4_address: 172.20.0.30
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  celery:
    build:
      dockerfile: build/celery-Dockerfile
    container_name: ioom_celery
    hostname: celery.itsonlyourmoney.com
    networks:
      ioom_network:
        ipv4_address: 172.20.0.31
    command: celery -A diy worker --loglevel=info
    restart: always
    volumes:
      - .:/app
    env_file:
      - diy/production.env
    depends_on:
      - redis
      - django
      - mysql

  beat:
    build:
      dockerfile: build/celery-Dockerfile
    container_name: ioom_beat
    hostname: beat.itsonlyourmoney.com
    networks:
      ioom_network:
        ipv4_address: 172.20.0.32
    command: celery -A diy beat --loglevel=info
    restart: always
    volumes:
      - .:/app
    env_file:
      - diy/production.env
    depends_on:
      - redis
      - django
      - mysql

volumes:
  redis_data:

networks:
  ioom_network:
    ipam:
    # Specify driver options
      driver: default
      config:
        - subnet: "172.20.0.0/16"
